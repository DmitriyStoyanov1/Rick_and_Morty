{"version":3,"sources":["pages/start/start.module.css","components/characterCard/characterCard.tsx","components/header/Header.tsx","components/filters/filterItem.tsx","components/filters/filter.tsx","pages/characters/Skeleton.tsx","pages/characters/Characters.tsx","pages/episodes/Episodes.tsx","pages/locations/Locations.tsx","pages/watchList/utils.tsx","pages/watchList/WatchList.tsx","index.tsx","pages/start/Start.tsx","pages/watchList/WatchList.hooks.tsx","components/header/header.module.css","pages/characters/style.module.css"],"names":["module","exports","useStyles","makeStyles","media","height","CharacterCard","id","name","image","onClick","classes","Card","CardMedia","className","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","Header","style","header","exact","to","activeClassName","headerLinkActive","EFilterItemName","theme","createStyles","filter","display","gridTemplateColumns","justifyContent","gridGap","paddingTop","spacing","paddingBottom","formControl","minWidth","FilterItem","labelText","children","onFilterChange","FormControl","InputLabel","Select","labelId","onChange","event","target","value","GENDERS","SPECIES","STATUS","Filter","onFilterAction","GENDER","map","current","MenuItem","CardSkeleton","Box","Skeleton","pt","width","container","background","modalBody","top","left","transform","position","gridColumnGap","backgroundColor","palette","paper","borderRadius","boxShadow","shadows","padding","COLUMNS","field","headerName","LocalStorageService","key","localStorage","setItem","JSON","stringify","data","getItem","parse","marginTop","ReactDOM","render","minHeight","path","styles","startPage","useState","isLoading","setIsLoading","charactersInfo","setCharactersInfo","currentPage","setCurrentPage","characters","setCharacters","isCharacterModalOpened","setIsCharacterModalOpened","character","setCharacter","gender","species","status","setFilter","buildFilterQueryParams","filterObject","Object","entries","join","fetchCharaters","page","a","baseUrl","fetch","response","json","info","results","useEffect","handleFilterSubmit","handlePaginationClick","_","handleCharacterCardClick","then","Container","maxWidth","Modal","open","onClose","aria-labelledby","aria-describedby","Avatar","alt","src","modalList","modalListKey","origin","Array","from","index","py","Pagination","count","pages","episodesInfo","setEpisodesInfo","episodesRows","setEpisodesRows","fetchEpisodes","episodesRequest","rows","episodeItem","air_date","episode","columns","pagination","pageSize","paginationMode","rowCount","onPageChange","locationsInfo","setLocationsInfo","locationsRows","setLocationsRows","fetchLocations","locationsRequest","type","dimension","initialState","items","setItems","React","addItem","text","newItem","Number","Date","toString","isCompleted","removeItem","removedItemId","filteredItems","item","updateItem","updatedItems","useWatchList","watchListItemText","setWatchListItemText","handleWatchListItemAdd","TextField","label","placeholder","onKeyPress","mt","Checkbox","checked","disabled","document","getElementById"],"mappings":"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","file":"static/js/main.da3b8489.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"startPage\":\"start_startPage__2AU6C\"};","import {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  media: {\n    height: 140,\n  },\n});\n\ninterface ICharacterCard {\n  id: number;\n  name: string;\n  image: string;\n  onClick: (id: number) => void;\n}\n\nexport function CharacterCard({ id, name, image, onClick }: ICharacterCard) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardMedia className={classes.media} image={image} title={name} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {name}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Some additional description\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => onClick(id)}>\n          Open\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport style from './header.module.css';\n\nexport function Header() {\n  return (\n    <header className={style.header}>\n      <nav>\n        <NavLink exact to=\"/\" activeClassName={style.headerLinkActive}>\n          Start Page\n        </NavLink>\n        <NavLink to=\"/characters\" activeClassName={style.headerLinkActive}>\n          Characters\n        </NavLink>\n        <NavLink to=\"/episodes\" activeClassName={style.headerLinkActive}>\n          Episodes\n        </NavLink>\n        <NavLink to=\"/locations\" activeClassName={style.headerLinkActive}>\n          Locations\n        </NavLink>\n        <NavLink to=\"/list\" activeClassName={style.headerLinkActive}>\n          My watch list\n        </NavLink>\n      </nav>\n    </header>\n  );\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { FormControl, Select, InputLabel } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    filter: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(4, 120px)',\n      justifyContent: 'center',\n      gridGap: 16,\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    formControl: {\n      minWidth: 120,\n    },\n  })\n);\n\nexport enum EFilterItemName {\n  GENDER = 'gender',\n  SPECIES = 'species',\n  STATUS = 'status'\n}\n\ninterface IFilterItemProps {\n  name: EFilterItemName;\n  // eslint-disable-next-line\n  labelText?: string;\n  children: React.ReactNode[];\n  onFilterChange: (name: string, value: string) => void;\n}\n\ntype TChangeEvent = React.ChangeEvent<{\n  name?: string | undefined;\n  value: unknown;\n}>;\n\nexport function FilterItem({\n  name,\n  labelText = '',\n  children,\n  onFilterChange,\n}: IFilterItemProps) {\n  const classes = useStyles();\n\n  const handleSelectChange = (event: TChangeEvent) => {\n    onFilterChange(name, event.target.value as string);\n  };\n\n  return (\n    <FormControl variant=\"filled\" className={classes.formControl}>\n      <InputLabel id={`${name}-select-filled-label`}>{labelText}</InputLabel>\n      <Select\n        id={`${name}-select-filled`}\n        labelId={`${name}-select-filled-label`}\n        onChange={handleSelectChange}\n      >\n        {children}\n      </Select>\n    </FormControl>\n  );\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { MenuItem, Button } from '@material-ui/core';\nimport { FilterItem, EFilterItemName } from './filterItem';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    filter: {\n      display: 'grid',\n      gridTemplateColumns: '200px 200px 200px 120px',\n      justifyContent: 'center',\n      gridGap: 16,\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    formControl: {\n      minWidth: 120,\n    },\n  })\n);\n\ninterface IFilterProps {\n  onFilterChange: (key: string, value: string) => void;\n  onFilterAction: () => void;\n}\n\nconst GENDERS: string[] = ['all', 'female', 'male', 'genderless', 'unknown'];\nconst SPECIES: string[] = ['all', 'human', 'alien'];\nconst STATUS: string[] = ['all', 'alive', 'dead', 'unknown'];\n\nexport function Filter({ onFilterChange, onFilterAction }: IFilterProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.filter}>\n      <FilterItem\n        name={EFilterItemName.GENDER}\n        labelText=\"Gender\"\n        onFilterChange={onFilterChange}\n      >\n        {GENDERS.map((current) => (\n          <MenuItem key={current} value={current}>\n            {current}\n          </MenuItem>\n        ))}\n      </FilterItem>\n\n      <FilterItem\n        name={EFilterItemName.SPECIES}\n        labelText=\"Species\"\n        onFilterChange={onFilterChange}\n      >\n        {SPECIES.map((current) => (\n          <MenuItem key={current} value={current}>\n            {current}\n          </MenuItem>\n        ))}\n      </FilterItem>\n\n      <FilterItem\n        name={EFilterItemName.STATUS}\n        labelText=\"Status\"\n        onFilterChange={onFilterChange}\n      >\n        {STATUS.map((current) => (\n          <MenuItem key={current} value={current}>\n            {current}\n          </MenuItem>\n        ))}\n      </FilterItem>\n\n      <Button\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onFilterAction}\n      >\n        Filter\n      </Button>\n    </div>\n  );\n}\n","import { Skeleton } from '@material-ui/lab';\nimport { Box } from '@material-ui/core';\n\nexport const CardSkeleton = () => (\n  <Box>\n    <Skeleton variant=\"rect\" height={160} />\n    <Box pt={0.5}>\n      <Skeleton />\n      <Skeleton width=\"60%\" />\n    </Box>\n  </Box>\n);\n","import { useEffect, useState } from 'react';\nimport { Pagination } from '@material-ui/lab';\nimport {\n  Avatar,\n  Box,\n  Container,\n  createStyles,\n  makeStyles,\n  Modal,\n  Theme,\n} from '@material-ui/core';\n\nimport { IApiResponseInfo, ICharacterEntity } from '../../types';\nimport { CharacterCard, Filter } from '../../components';\nimport { CardSkeleton } from './Skeleton';\n\nimport style from './style.module.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      background: 'white',\n    },\n    modalBody: {\n      top: `50%`,\n      left: `50%`,\n      transform: `translate(-50%, -50%)`,\n      position: 'absolute',\n      minWidth: 600,\n      display: 'grid',\n      gridTemplateColumns: 'min-content 1fr',\n      gridColumnGap: 24,\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: '6px',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(4, 4, 4),\n    },\n  })\n);\n\nconst PAGE_SIZE = 20;\n\ninterface IFilter {\n  gender: 'all' | 'female' | 'male' | 'genderless' | 'unknown';\n  species: 'all' | 'human' | 'alien';\n  status: 'all' | 'alive' | 'dead' | 'unknown';\n}\n\nexport function CharactersPage() {\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [charactersInfo, setCharactersInfo] = useState<IApiResponseInfo | null>(\n    null\n  );\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [characters, setCharacters] = useState<ICharacterEntity[]>([]);\n  const [isCharacterModalOpened, setIsCharacterModalOpened] = useState<boolean>(\n    false\n  );\n\n  const [character, setCharacter] = useState<ICharacterEntity | null>(null);\n\n  const [filter, setFilter] = useState<IFilter>({\n    gender: 'all',\n    species: 'all',\n    status: 'all',\n  });\n\n  const buildFilterQueryParams = (filterObject: IFilter) =>\n    Object.entries(filterObject)\n      .filter(([_, value]) => value !== 'all')\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&');\n\n  const fetchCharaters = async (page?: number) => {\n    let baseUrl = 'https://rickandmortyapi.com/api/character?';\n\n    if (buildFilterQueryParams(filter)) {\n      baseUrl += buildFilterQueryParams(filter);\n    }\n\n    if (page) {\n      baseUrl += buildFilterQueryParams(filter)\n        ? `&page=${page}`\n        : `page=${page}`;\n    }\n\n    try {\n      setIsLoading(true);\n\n      const response = await fetch(baseUrl);\n      const data = await response.json();\n\n      const { info, results } = data;\n\n      setCharactersInfo(info);\n      setCharacters(results);\n\n      if (page) {\n        setCurrentPage(page);\n      } else {\n        setCurrentPage(1);\n      }\n\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharaters();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleFilterChange = (key: string, value: string) => {\n    setFilter({\n      ...filter,\n      [key]: value,\n    });\n  };\n\n  const handleFilterSubmit = async () => {\n    await fetchCharaters();\n  };\n\n  // eslint-disable-next-line\n  const handlePaginationClick = async (_: any, page: number) => {\n    await fetchCharaters(page);\n  };\n\n  const handleCharacterCardClick = (id: number) => {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCharacter(data);\n        setIsCharacterModalOpened(true);\n      });\n  };\n\n  const handleClose = () => {\n    setIsCharacterModalOpened(false);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Filter\n        onFilterChange={handleFilterChange}\n        onFilterAction={handleFilterSubmit}\n      />\n      <Modal\n        open={isCharacterModalOpened}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <>\n          {character && (\n            <div className={classes.modalBody}>\n              <div>\n                <Avatar\n                  style={{ width: 200, height: 200 }}\n                  alt=\"Remy Sharp\"\n                  src={character.image}\n                />\n              </div>\n              <ul className={style.modalList}>\n                <li>\n                  <span className={style.modalListKey}>Name</span>:{' '}\n                  <span>{character.name}</span>\n                </li>\n                <li>\n                  <span className={style.modalListKey}>Species</span>:{' '}\n                  <span>{character.species}</span>\n                </li>\n                <li>\n                  <span className={style.modalListKey}>Status</span>:{' '}\n                  <span>{character.status}</span>\n                </li>\n                <li>\n                  <span className={style.modalListKey}>Gender</span>:{' '}\n                  <span>{character.gender}</span>\n                </li>\n                <li>\n                  <span className={style.modalListKey}>Origin</span>:{' '}\n                  <span>{character.origin.name}</span>\n                </li>\n              </ul>\n            </div>\n          )}\n        </>\n      </Modal>\n\n      <Box display=\"grid\" gridGap=\"16px\" gridTemplateColumns=\"repeat(5, 1fr)\">\n        {isLoading &&\n          Array.from(new Array(PAGE_SIZE)).map((_, index) => (\n            // eslint-disable-next-line\n            <CardSkeleton key={index} />\n          ))}\n\n        {!isLoading &&\n          characters?.map(({ id, name, image }) => (\n            <CharacterCard\n              key={id}\n              id={id}\n              name={name}\n              image={image}\n              onClick={handleCharacterCardClick}\n            />\n          ))}\n      </Box>\n\n      <Box display=\"flex\" justifyContent=\"center\" py={6}>\n        <Pagination\n          color=\"primary\"\n          size=\"large\"\n          page={currentPage}\n          count={charactersInfo?.pages}\n          onChange={handlePaginationClick}\n        />\n      </Box>\n    </Container>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Container, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { IApiResponseInfo } from '../../types';\n\ninterface IEpisode {\n  id: string;\n  name: string;\n  air_date: string;\n  episode: string;\n  characters: string[];\n  url: string;\n  created: string;\n}\n\ninterface IGridColumn {\n  field: string;\n  headerName: string;\n  width: number;\n}\n\nconst COLUMNS: IGridColumn[] = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  { field: 'name', headerName: 'Name', width: 250 },\n  { field: 'air_date', headerName: 'Air Date', width: 250 },\n  { field: 'episode', headerName: 'Episode', width: 250 },\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      background: 'white',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n  })\n);\n\nexport function EpisodesPage() {\n  const classes = useStyles();\n  const [episodesInfo, setEpisodesInfo] = useState<IApiResponseInfo | null>(null);\n  const [episodesRows, setEpisodesRows] = useState<IEpisode[]>([]);\n\n  const fetchEpisodes = async (page?: number) => {\n    const baseUrl = `https://rickandmortyapi.com/api/episode?${\n      page ? `page=${page}` : ''\n    }`;\n\n    const episodesRequest = await fetch(baseUrl);\n    const data = await episodesRequest.json();\n\n    const rows = data.results.map((episodeItem: IEpisode) => ({\n      id: episodeItem.id,\n      name: episodeItem.name,\n      air_date: episodeItem.air_date,\n      episode: episodeItem.episode,\n    }));\n\n    setEpisodesInfo(data.info);\n    setEpisodesRows(rows);\n  };\n\n  useEffect(() => {\n    fetchEpisodes();\n  }, []);\n\n  const handleFetchEpisodes = ({ page }: { page: number }) => {\n    fetchEpisodes(page + 1);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          rows={episodesRows}\n          columns={COLUMNS}\n          pagination\n          pageSize={20}\n          paginationMode=\"server\"\n          rowCount={episodesInfo?.count}\n          onPageChange={handleFetchEpisodes}\n        />\n      </div>\n    </Container>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Container, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { IApiResponseInfo, ILocationEntity } from '../../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      background: 'white',\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n  })\n);\n\ninterface IGridColumn {\n  field: string;\n  headerName: string;\n  width: number;\n}\n\nconst COLUMNS: IGridColumn[] = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  { field: 'name', headerName: 'Name', width: 250 },\n  { field: 'type', headerName: 'Type', width: 250 },\n  { field: 'dimension', headerName: 'Dimension', width: 250 },\n];\n\nexport function LocationsPage() {\n  const classes = useStyles();\n  const [locationsInfo, setLocationsInfo] = useState<IApiResponseInfo | null>(\n    null\n  );\n  const [locationsRows, setLocationsRows] = useState<ILocationEntity[]>([]);\n\n  const fetchLocations = async (page?: number) => {\n    const baseUrl = `https://rickandmortyapi.com/api/location?${\n      page ? `page=${page}` : ''\n    }`;\n\n    const locationsRequest = await fetch(baseUrl);\n    const data = await locationsRequest.json();\n\n    const rows = data.results.map(\n      ({ id, name, type, dimension }: ILocationEntity) => ({\n        id,\n        name,\n        type,\n        dimension,\n      })\n    );\n\n    setLocationsInfo(data.info);\n    setLocationsRows(rows);\n  };\n\n  useEffect(() => {\n    fetchLocations();\n  }, []);\n\n  const handleFetchLocations = ({ page }: { page: number }) => {\n    fetchLocations(page + 1);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <div style={{ height: 800, width: '100%' }}>\n        <DataGrid\n          rows={locationsRows}\n          columns={COLUMNS}\n          pagination\n          pageSize={20}\n          paginationMode=\"server\"\n          rowCount={locationsInfo?.count}\n          onPageChange={handleFetchLocations}\n        />\n      </div>\n    </Container>\n  );\n}\n","export class LocalStorageService {\n  // any потому что мы не знаем что покладут в localStorage\n  // eslint-disable-next-line\n  static setItem(key: string, value: any) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // any потому что мы не знаем что лежит в localStorage\n  // eslint-disable-next-line\n  static getItem(key: string): any {\n    const data = localStorage.getItem(key);\n\n    if (data !== null) {\n      return JSON.parse(data);\n    }\n\n    return null;\n  }\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  createStyles,\n  makeStyles,\n  TextField,\n  Theme,\n} from '@material-ui/core';\nimport { useWatchList } from './WatchList.hooks';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      background: 'white',\n      marginTop: theme.spacing(4),\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n  })\n);\n\nexport function WatchListPage() {\n  const classes = useStyles();\n  const { items, addItem, removeItem, updateItem } = useWatchList();\n\n  const [watchListItemText, setWatchListItemText] = useState('');\n\n  const handleWatchListItemAdd = () => {\n    if (watchListItemText) {\n      addItem(watchListItemText);\n      setWatchListItemText('');\n    }\n  };\n\n  const handleWatchListTextInputChange = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setWatchListItemText(event.target.value);\n  };\n\n  const handleEnterKeyPress = (event: { key: string }) => {\n    if (event.key === 'Enter') {\n      handleWatchListItemAdd();\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <Box display=\"grid\" gridTemplateColumns=\"1fr max-content\" gridGap=\"16px\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Text\"\n          placeholder=\"Enter watch list item text\"\n          variant=\"outlined\"\n          value={watchListItemText}\n          onChange={handleWatchListTextInputChange}\n          onKeyPress={handleEnterKeyPress}\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleWatchListItemAdd}\n        >\n          Add Item\n        </Button>\n      </Box>\n\n      <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap=\"16px\" mt=\"16px\">\n        {items.map(({ id, isCompleted, text }) => (\n          <Box\n            key={id}\n            display=\"grid\"\n            gridTemplateColumns=\"min-content 1fr max-content\"\n            gridGap=\"16px\"\n          >\n            <Checkbox\n              checked={isCompleted}\n              onChange={() => updateItem({ id, isCompleted: !isCompleted })}\n            />\n            <TextField\n              disabled\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={text}\n            />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => removeItem(id)}\n            >\n              Remove Item\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </Container>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { Header } from './components';\nimport {\n  StartPage,\n  CharactersPage,\n  EpisodesPage,\n  LocationsPage,\n  WatchListPage,\n} from './pages';\n\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <Box minHeight=\"100vh\">\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\" component={StartPage} />\n        <Route exact path=\"/characters\" component={CharactersPage} />\n        <Route exact path=\"/episodes\" component={EpisodesPage} />\n        <Route exact path=\"/locations\" component={LocationsPage} />\n        <Route exact path=\"/list\" component={WatchListPage} />\n      </Switch>\n    </Box>\n  </Router>,\n  document.getElementById('root')\n);\n","import { Box, Typography } from '@material-ui/core';\nimport styles from './start.module.css';\n\nexport function StartPage() {\n  return (\n    <div className={styles.startPage}>\n      <Box position=\"relative\" width=\"80%\" left=\"5%\" top=\"10%\">\n        <Typography variant=\"h3\" component=\"h1\" color=\"secondary\">\n          Rick and Morty App\n        </Typography>\n      </Box>\n    </div>\n  );\n}\n\n/* color: ; */\n","import React, { useState } from 'react';\nimport { LocalStorageService } from './utils';\n\ninterface ITodoItem {\n  id: string;\n  text: string;\n  isCompleted: boolean;\n}\n\nexport function useWatchList() {\n  const initialState = LocalStorageService.getItem('rickAndMortyTodo')\n    ? LocalStorageService.getItem('rickAndMortyTodo')\n    : [];\n\n  const [items, setItems] = useState<ITodoItem[]>(initialState);\n\n  const makeHash = () => Number(new Date()).toString(36);\n\n  const syncWithLocalStorage = () => {\n    LocalStorageService.setItem('rickAndMortyTodo', items);\n  };\n\n  // При каждом обновлении элементов списка выполняем синхронизацию\n  React.useEffect(syncWithLocalStorage, [items]);\n\n  const addItem = (text: string) => {\n    const newItem = {\n      id: makeHash(),\n      text,\n      isCompleted: false,\n    };\n\n    setItems([...items, newItem]);\n  };\n\n  const removeItem = (removedItemId: string) => {\n    const filteredItems = items.filter((item) => item.id !== removedItemId);\n\n    setItems(filteredItems);\n  };\n\n  const updateItem = ({\n    id,\n    isCompleted,\n  }: Pick<ITodoItem, 'id' | 'isCompleted'>) => {\n    const updatedItems = items.map((item) => {\n      if (item.id === id) {\n        return {\n          id,\n          text: item.text,\n          isCompleted,\n        };\n      }\n\n      return item;\n    });\n\n    setItems(updatedItems);\n  };\n\n  return {\n    items,\n    addItem,\n    removeItem,\n    updateItem,\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__37m8t\",\"headerLinkActive\":\"header_headerLinkActive__LLGtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalList\":\"style_modalList__31Ugs\",\"modalListKey\":\"style_modalListKey__3OG_r\"};"],"sourceRoot":""}