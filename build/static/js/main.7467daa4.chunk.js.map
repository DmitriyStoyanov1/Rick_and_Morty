{"version":3,"sources":["pages/start/start.module.css","components/characterCard/characterCard.tsx","components/header/Header.tsx","components/filters/filterItem.tsx","components/filters/filter.tsx","pages/characters/Skeleton.tsx","pages/characters/Characters.tsx","pages/episodes/Episodes.tsx","pages/locations/Locations.tsx","pages/watchList/utils.tsx","pages/watchList/WatchList.tsx","index.tsx","pages/start/Start.tsx","pages/watchList/WatchList.hooks.tsx","components/header/header.module.css","pages/characters/style.module.css"],"names":["module","exports","useStyles","makeStyles","media","height","CharacterCard","id","name","image","onClick","classes","Card","CardMedia","className","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","Header","style","header","exact","to","activeClassName","headerLinkActive","EFilterItemName","theme","createStyles","filter","display","gridTemplateColumns","justifyContent","gridGap","paddingTop","spacing","paddingBottom","formControl","minWidth","FilterItem","labelText","children","onFilterChange","FormControl","InputLabel","Select","labelId","onChange","event","target","value","GENDERS","SPECIES","STATUS","Filter","onFilterAction","GENDER","map","current","MenuItem","CardSkeleton","Box","Skeleton","pt","width","container","background","modalBody","top","left","transform","position","gridColumnGap","backgroundColor","palette","paper","borderRadius","boxShadow","shadows","padding","COLUMNS","field","headerName","LocalStorageService","key","localStorage","setItem","JSON","stringify","data","getItem","parse","marginTop","ReactDOM","render","basename","process","minHeight","path","styles","startPage","useState","isLoading","setIsLoading","charactersInfo","setCharactersInfo","currentPage","setCurrentPage","characters","setCharacters","isCharacterModalOpened","setIsCharacterModalOpened","character","setCharacter","gender","species","status","setFilter","buildFilterQueryParams","filterObject","Object","entries","join","fetchCharaters","page","a","baseUrl","fetch","response","json","info","results","useEffect","handleFilterSubmit","handlePaginationClick","_","handleCharacterCardClick","then","Container","maxWidth","Modal","open","onClose","aria-labelledby","aria-describedby","Avatar","alt","src","modalList","modalListKey","origin","Array","from","index","py","Pagination","count","pages","episodesInfo","setEpisodesInfo","episodesRows","setEpisodesRows","fetchEpisodes","episodesRequest","rows","episodeItem","air_date","episode","columns","pagination","pageSize","paginationMode","rowCount","onPageChange","locationsInfo","setLocationsInfo","locationsRows","setLocationsRows","fetchLocations","locationsRequest","type","dimension","initialState","items","setItems","React","addItem","text","newItem","Number","Date","toString","isCompleted","removeItem","removedItemId","filteredItems","item","updateItem","updatedItems","useWatchList","watchListItemText","setWatchListItemText","handleWatchListItemAdd","TextField","label","placeholder","onKeyPress","mt","Checkbox","checked","disabled","document","getElementById"],"mappings":"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","file":"static/js/main.7467daa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"startPage\":\"start_startPage__39vIN\"};","import {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\ninterface ICharacterCard {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n  onClick: (id: number) => void;\r\n}\r\n\r\nexport function CharacterCard({ id, name, image, onClick }: ICharacterCard) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardMedia className={classes.media} image={image} title={name} />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Some additional description\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => onClick(id)}>\r\n          Open\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport style from './header.module.css';\r\n\r\nexport function Header() {\r\n  return (\r\n    <header className={style.header}>\r\n      <nav>\r\n        <NavLink exact to=\"/\" activeClassName={style.headerLinkActive}>\r\n          Start Page\r\n        </NavLink>\r\n        <NavLink to=\"/characters\" activeClassName={style.headerLinkActive}>\r\n          Characters\r\n        </NavLink>\r\n        <NavLink to=\"/episodes\" activeClassName={style.headerLinkActive}>\r\n          Episodes\r\n        </NavLink>\r\n        <NavLink to=\"/locations\" activeClassName={style.headerLinkActive}>\r\n          Locations\r\n        </NavLink>\r\n        <NavLink to=\"/list\" activeClassName={style.headerLinkActive}>\r\n          My watch list\r\n        </NavLink>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { FormControl, Select, InputLabel } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    filter: {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(4, 120px)',\r\n      justifyContent: 'center',\r\n      gridGap: 16,\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  })\r\n);\r\n\r\nexport enum EFilterItemName {\r\n  GENDER = 'gender',\r\n  SPECIES = 'species',\r\n  STATUS = 'status'\r\n}\r\n\r\ninterface IFilterItemProps {\r\n  name: EFilterItemName;\r\n  // eslint-disable-next-line\r\n  labelText?: string;\r\n  children: React.ReactNode[];\r\n  onFilterChange: (name: string, value: string) => void;\r\n}\r\n\r\ntype TChangeEvent = React.ChangeEvent<{\r\n  name?: string | undefined;\r\n  value: unknown;\r\n}>;\r\n\r\nexport function FilterItem({\r\n  name,\r\n  labelText = '',\r\n  children,\r\n  onFilterChange,\r\n}: IFilterItemProps) {\r\n  const classes = useStyles();\r\n\r\n  const handleSelectChange = (event: TChangeEvent) => {\r\n    onFilterChange(name, event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\" className={classes.formControl}>\r\n      <InputLabel id={`${name}-select-filled-label`}>{labelText}</InputLabel>\r\n      <Select\r\n        id={`${name}-select-filled`}\r\n        labelId={`${name}-select-filled-label`}\r\n        onChange={handleSelectChange}\r\n      >\r\n        {children}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { MenuItem, Button } from '@material-ui/core';\r\nimport { FilterItem, EFilterItemName } from './filterItem';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    filter: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '200px 200px 200px 120px',\r\n      justifyContent: 'center',\r\n      gridGap: 16,\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IFilterProps {\r\n  onFilterChange: (key: string, value: string) => void;\r\n  onFilterAction: () => void;\r\n}\r\n\r\nconst GENDERS: string[] = ['all', 'female', 'male', 'genderless', 'unknown'];\r\nconst SPECIES: string[] = ['all', 'human', 'alien'];\r\nconst STATUS: string[] = ['all', 'alive', 'dead', 'unknown'];\r\n\r\nexport function Filter({ onFilterChange, onFilterAction }: IFilterProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.filter}>\r\n      <FilterItem\r\n        name={EFilterItemName.GENDER}\r\n        labelText=\"Gender\"\r\n        onFilterChange={onFilterChange}\r\n      >\r\n        {GENDERS.map((current) => (\r\n          <MenuItem key={current} value={current}>\r\n            {current}\r\n          </MenuItem>\r\n        ))}\r\n      </FilterItem>\r\n\r\n      <FilterItem\r\n        name={EFilterItemName.SPECIES}\r\n        labelText=\"Species\"\r\n        onFilterChange={onFilterChange}\r\n      >\r\n        {SPECIES.map((current) => (\r\n          <MenuItem key={current} value={current}>\r\n            {current}\r\n          </MenuItem>\r\n        ))}\r\n      </FilterItem>\r\n\r\n      <FilterItem\r\n        name={EFilterItemName.STATUS}\r\n        labelText=\"Status\"\r\n        onFilterChange={onFilterChange}\r\n      >\r\n        {STATUS.map((current) => (\r\n          <MenuItem key={current} value={current}>\r\n            {current}\r\n          </MenuItem>\r\n        ))}\r\n      </FilterItem>\r\n\r\n      <Button\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={onFilterAction}\r\n      >\r\n        Filter\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Skeleton } from '@material-ui/lab';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport const CardSkeleton = () => (\r\n  <Box>\r\n    <Skeleton variant=\"rect\" height={160} />\r\n    <Box pt={0.5}>\r\n      <Skeleton />\r\n      <Skeleton width=\"60%\" />\r\n    </Box>\r\n  </Box>\r\n);\r\n","import { useEffect, useState } from 'react';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  createStyles,\r\n  makeStyles,\r\n  Modal,\r\n  Theme,\r\n} from '@material-ui/core';\r\n\r\nimport { IApiResponseInfo, ICharacterEntity } from '../../types';\r\nimport { CharacterCard, Filter } from '../../components';\r\nimport { CardSkeleton } from './Skeleton';\r\n\r\nimport style from './style.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      background: 'white',\r\n    },\r\n    modalBody: {\r\n      top: `50%`,\r\n      left: `50%`,\r\n      transform: `translate(-50%, -50%)`,\r\n      position: 'absolute',\r\n      minWidth: 600,\r\n      display: 'grid',\r\n      gridTemplateColumns: 'min-content 1fr',\r\n      gridColumnGap: 24,\r\n      backgroundColor: theme.palette.background.paper,\r\n      borderRadius: '6px',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(4, 4, 4),\r\n    },\r\n  })\r\n);\r\n\r\nconst PAGE_SIZE = 20;\r\n\r\ninterface IFilter {\r\n  gender: 'all' | 'female' | 'male' | 'genderless' | 'unknown';\r\n  species: 'all' | 'human' | 'alien';\r\n  status: 'all' | 'alive' | 'dead' | 'unknown';\r\n}\r\n\r\nexport function CharactersPage() {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [charactersInfo, setCharactersInfo] = useState<IApiResponseInfo | null>(\r\n    null\r\n  );\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [characters, setCharacters] = useState<ICharacterEntity[]>([]);\r\n  const [isCharacterModalOpened, setIsCharacterModalOpened] = useState<boolean>(\r\n    false\r\n  );\r\n\r\n  const [character, setCharacter] = useState<ICharacterEntity | null>(null);\r\n\r\n  const [filter, setFilter] = useState<IFilter>({\r\n    gender: 'all',\r\n    species: 'all',\r\n    status: 'all',\r\n  });\r\n\r\n  const buildFilterQueryParams = (filterObject: IFilter) =>\r\n    Object.entries(filterObject)\r\n      .filter(([_, value]) => value !== 'all')\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join('&');\r\n\r\n  const fetchCharaters = async (page?: number) => {\r\n    let baseUrl = 'https://rickandmortyapi.com/api/character?';\r\n\r\n    if (buildFilterQueryParams(filter)) {\r\n      baseUrl += buildFilterQueryParams(filter);\r\n    }\r\n\r\n    if (page) {\r\n      baseUrl += buildFilterQueryParams(filter)\r\n        ? `&page=${page}`\r\n        : `page=${page}`;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(baseUrl);\r\n      const data = await response.json();\r\n\r\n      const { info, results } = data;\r\n\r\n      setCharactersInfo(info);\r\n      setCharacters(results);\r\n\r\n      if (page) {\r\n        setCurrentPage(page);\r\n      } else {\r\n        setCurrentPage(1);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCharaters();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleFilterChange = (key: string, value: string) => {\r\n    setFilter({\r\n      ...filter,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleFilterSubmit = async () => {\r\n    await fetchCharaters();\r\n  };\r\n\r\n  // eslint-disable-next-line\r\n  const handlePaginationClick = async (_: any, page: number) => {\r\n    await fetchCharaters(page);\r\n  };\r\n\r\n  const handleCharacterCardClick = (id: number) => {\r\n    fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCharacter(data);\r\n        setIsCharacterModalOpened(true);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCharacterModalOpened(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      <Filter\r\n        onFilterChange={handleFilterChange}\r\n        onFilterAction={handleFilterSubmit}\r\n      />\r\n      <Modal\r\n        open={isCharacterModalOpened}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <>\r\n          {character && (\r\n            <div className={classes.modalBody}>\r\n              <div>\r\n                <Avatar\r\n                  style={{ width: 200, height: 200 }}\r\n                  alt=\"Remy Sharp\"\r\n                  src={character.image}\r\n                />\r\n              </div>\r\n              <ul className={style.modalList}>\r\n                <li>\r\n                  <span className={style.modalListKey}>Name</span>:{' '}\r\n                  <span>{character.name}</span>\r\n                </li>\r\n                <li>\r\n                  <span className={style.modalListKey}>Species</span>:{' '}\r\n                  <span>{character.species}</span>\r\n                </li>\r\n                <li>\r\n                  <span className={style.modalListKey}>Status</span>:{' '}\r\n                  <span>{character.status}</span>\r\n                </li>\r\n                <li>\r\n                  <span className={style.modalListKey}>Gender</span>:{' '}\r\n                  <span>{character.gender}</span>\r\n                </li>\r\n                <li>\r\n                  <span className={style.modalListKey}>Origin</span>:{' '}\r\n                  <span>{character.origin.name}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </>\r\n      </Modal>\r\n\r\n      <Box display=\"grid\" gridGap=\"16px\" gridTemplateColumns=\"repeat(5, 1fr)\">\r\n        {isLoading &&\r\n          Array.from(new Array(PAGE_SIZE)).map((_, index) => (\r\n            // eslint-disable-next-line\r\n            <CardSkeleton key={index} />\r\n          ))}\r\n\r\n        {!isLoading &&\r\n          characters?.map(({ id, name, image }) => (\r\n            <CharacterCard\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              image={image}\r\n              onClick={handleCharacterCardClick}\r\n            />\r\n          ))}\r\n      </Box>\r\n\r\n      <Box display=\"flex\" justifyContent=\"center\" py={6}>\r\n        <Pagination\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          page={currentPage}\r\n          count={charactersInfo?.pages}\r\n          onChange={handlePaginationClick}\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Container, createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { IApiResponseInfo } from '../../types';\r\n\r\ninterface IEpisode {\r\n  id: string;\r\n  name: string;\r\n  air_date: string;\r\n  episode: string;\r\n  characters: string[];\r\n  url: string;\r\n  created: string;\r\n}\r\n\r\ninterface IGridColumn {\r\n  field: string;\r\n  headerName: string;\r\n  width: number;\r\n}\r\n\r\nconst COLUMNS: IGridColumn[] = [\r\n  { field: 'id', headerName: 'ID', width: 100 },\r\n  { field: 'name', headerName: 'Name', width: 250 },\r\n  { field: 'air_date', headerName: 'Air Date', width: 250 },\r\n  { field: 'episode', headerName: 'Episode', width: 250 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      background: 'white',\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nexport function EpisodesPage() {\r\n  const classes = useStyles();\r\n  const [episodesInfo, setEpisodesInfo] = useState<IApiResponseInfo | null>(null);\r\n  const [episodesRows, setEpisodesRows] = useState<IEpisode[]>([]);\r\n\r\n  const fetchEpisodes = async (page?: number) => {\r\n    const baseUrl = `https://rickandmortyapi.com/api/episode?${\r\n      page ? `page=${page}` : ''\r\n    }`;\r\n\r\n    const episodesRequest = await fetch(baseUrl);\r\n    const data = await episodesRequest.json();\r\n\r\n    const rows = data.results.map((episodeItem: IEpisode) => ({\r\n      id: episodeItem.id,\r\n      name: episodeItem.name,\r\n      air_date: episodeItem.air_date,\r\n      episode: episodeItem.episode,\r\n    }));\r\n\r\n    setEpisodesInfo(data.info);\r\n    setEpisodesRows(rows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEpisodes();\r\n  }, []);\r\n\r\n  const handleFetchEpisodes = ({ page }: { page: number }) => {\r\n    fetchEpisodes(page + 1);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      <div style={{ height: 800, width: '100%' }}>\r\n        <DataGrid\r\n          rows={episodesRows}\r\n          columns={COLUMNS}\r\n          pagination\r\n          pageSize={20}\r\n          paginationMode=\"server\"\r\n          rowCount={episodesInfo?.count}\r\n          onPageChange={handleFetchEpisodes}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Container, createStyles, makeStyles, Theme } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { IApiResponseInfo, ILocationEntity } from '../../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      background: 'white',\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IGridColumn {\r\n  field: string;\r\n  headerName: string;\r\n  width: number;\r\n}\r\n\r\nconst COLUMNS: IGridColumn[] = [\r\n  { field: 'id', headerName: 'ID', width: 100 },\r\n  { field: 'name', headerName: 'Name', width: 250 },\r\n  { field: 'type', headerName: 'Type', width: 250 },\r\n  { field: 'dimension', headerName: 'Dimension', width: 250 },\r\n];\r\n\r\nexport function LocationsPage() {\r\n  const classes = useStyles();\r\n  const [locationsInfo, setLocationsInfo] = useState<IApiResponseInfo | null>(\r\n    null\r\n  );\r\n  const [locationsRows, setLocationsRows] = useState<ILocationEntity[]>([]);\r\n\r\n  const fetchLocations = async (page?: number) => {\r\n    const baseUrl = `https://rickandmortyapi.com/api/location?${\r\n      page ? `page=${page}` : ''\r\n    }`;\r\n\r\n    const locationsRequest = await fetch(baseUrl);\r\n    const data = await locationsRequest.json();\r\n\r\n    const rows = data.results.map(\r\n      ({ id, name, type, dimension }: ILocationEntity) => ({\r\n        id,\r\n        name,\r\n        type,\r\n        dimension,\r\n      })\r\n    );\r\n\r\n    setLocationsInfo(data.info);\r\n    setLocationsRows(rows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  const handleFetchLocations = ({ page }: { page: number }) => {\r\n    fetchLocations(page + 1);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n      <div style={{ height: 800, width: '100%' }}>\r\n        <DataGrid\r\n          rows={locationsRows}\r\n          columns={COLUMNS}\r\n          pagination\r\n          pageSize={20}\r\n          paginationMode=\"server\"\r\n          rowCount={locationsInfo?.count}\r\n          onPageChange={handleFetchLocations}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","export class LocalStorageService {\r\n  // any потому что мы не знаем что покладут в localStorage\r\n  // eslint-disable-next-line\r\n  static setItem(key: string, value: any) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  // any потому что мы не знаем что лежит в localStorage\r\n  // eslint-disable-next-line\r\n  static getItem(key: string): any {\r\n    const data = localStorage.getItem(key);\r\n\r\n    if (data !== null) {\r\n      return JSON.parse(data);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  createStyles,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport { useWatchList } from './WatchList.hooks';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      background: 'white',\r\n      marginTop: theme.spacing(4),\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nexport function WatchListPage() {\r\n  const classes = useStyles();\r\n  const { items, addItem, removeItem, updateItem } = useWatchList();\r\n\r\n  const [watchListItemText, setWatchListItemText] = useState('');\r\n\r\n  const handleWatchListItemAdd = () => {\r\n    if (watchListItemText) {\r\n      addItem(watchListItemText);\r\n      setWatchListItemText('');\r\n    }\r\n  };\r\n\r\n  const handleWatchListTextInputChange = (event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setWatchListItemText(event.target.value);\r\n  };\r\n\r\n  const handleEnterKeyPress = (event: { key: string }) => {\r\n    if (event.key === 'Enter') {\r\n      handleWatchListItemAdd();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className={classes.container}>\r\n      <Box display=\"grid\" gridTemplateColumns=\"1fr max-content\" gridGap=\"16px\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Text\"\r\n          placeholder=\"Enter watch list item text\"\r\n          variant=\"outlined\"\r\n          value={watchListItemText}\r\n          onChange={handleWatchListTextInputChange}\r\n          onKeyPress={handleEnterKeyPress}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleWatchListItemAdd}\r\n        >\r\n          Add Item\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap=\"16px\" mt=\"16px\">\r\n        {items.map(({ id, isCompleted, text }) => (\r\n          <Box\r\n            key={id}\r\n            display=\"grid\"\r\n            gridTemplateColumns=\"min-content 1fr max-content\"\r\n            gridGap=\"16px\"\r\n          >\r\n            <Checkbox\r\n              checked={isCompleted}\r\n              onChange={() => updateItem({ id, isCompleted: !isCompleted })}\r\n            />\r\n            <TextField\r\n              disabled\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              value={text}\r\n            />\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => removeItem(id)}\r\n            >\r\n              Remove Item\r\n            </Button>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Box } from '@material-ui/core';\r\nimport { Header } from './components';\r\nimport {\r\n  StartPage,\r\n  CharactersPage,\r\n  EpisodesPage,\r\n  LocationsPage,\r\n  WatchListPage,\r\n} from './pages';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Box minHeight=\"100vh\">\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={StartPage} />\r\n        <Route exact path=\"/characters\" component={CharactersPage} />\r\n        <Route exact path=\"/episodes\" component={EpisodesPage} />\r\n        <Route exact path=\"/locations\" component={LocationsPage} />\r\n        <Route exact path=\"/list\" component={WatchListPage} />\r\n      </Switch>\r\n    </Box>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n","import { Box, Typography } from '@material-ui/core';\r\nimport styles from './start.module.css';\r\n\r\nexport function StartPage() {\r\n  return (\r\n    <div className={styles.startPage}>\r\n      <Box position=\"relative\" width=\"80%\" left=\"5%\" top=\"10%\">\r\n        <Typography variant=\"h3\" component=\"h1\" color=\"secondary\">\r\n          Rick and Morty App\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* color: ; */\r\n","import React, { useState } from 'react';\r\nimport { LocalStorageService } from './utils';\r\n\r\ninterface ITodoItem {\r\n  id: string;\r\n  text: string;\r\n  isCompleted: boolean;\r\n}\r\n\r\nexport function useWatchList() {\r\n  const initialState = LocalStorageService.getItem('rickAndMortyTodo')\r\n    ? LocalStorageService.getItem('rickAndMortyTodo')\r\n    : [];\r\n\r\n  const [items, setItems] = useState<ITodoItem[]>(initialState);\r\n\r\n  const makeHash = () => Number(new Date()).toString(36);\r\n\r\n  const syncWithLocalStorage = () => {\r\n    LocalStorageService.setItem('rickAndMortyTodo', items);\r\n  };\r\n\r\n  // При каждом обновлении элементов списка выполняем синхронизацию\r\n  React.useEffect(syncWithLocalStorage, [items]);\r\n\r\n  const addItem = (text: string) => {\r\n    const newItem = {\r\n      id: makeHash(),\r\n      text,\r\n      isCompleted: false,\r\n    };\r\n\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const removeItem = (removedItemId: string) => {\r\n    const filteredItems = items.filter((item) => item.id !== removedItemId);\r\n\r\n    setItems(filteredItems);\r\n  };\r\n\r\n  const updateItem = ({\r\n    id,\r\n    isCompleted,\r\n  }: Pick<ITodoItem, 'id' | 'isCompleted'>) => {\r\n    const updatedItems = items.map((item) => {\r\n      if (item.id === id) {\r\n        return {\r\n          id,\r\n          text: item.text,\r\n          isCompleted,\r\n        };\r\n      }\r\n\r\n      return item;\r\n    });\r\n\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  return {\r\n    items,\r\n    addItem,\r\n    removeItem,\r\n    updateItem,\r\n  };\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3pAJT\",\"headerLinkActive\":\"header_headerLinkActive__315xp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalList\":\"style_modalList__wqV7h\",\"modalListKey\":\"style_modalListKey__fbyr-\"};"],"sourceRoot":""}